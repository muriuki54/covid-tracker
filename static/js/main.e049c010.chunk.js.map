{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css","images/covid.png"],"names":["module","exports","Cards","data","confirmed","deaths","lastUpdate","recovered","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableURL","axios","get","console","log","fetchDailyData","modifiedData","map","dt","total","reportDate","fetchCountries","response","countries","name","Chart","fetchedData","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","CountryPicker","handleCountryChange","fetchedCountries","setCountries","options","index","key","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","App","state","setState","this","src","coronaImage","alt","style","width","margin","Component","ReactDOM","render","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NCmDpJC,EA5CD,SAAC,GAA0D,IAAD,IAAvDC,KAAOC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,UAEnD,OAAIH,EAEA,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAIV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WAC1E,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKxB,EAAUyB,MAAOC,SAAU,IAAKC,UAAU,OAEtE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAK1B,GAAY2B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,qBAIR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOF,YACzE,kBAACe,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,cACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKrB,EAAUsB,MAAOC,SAAU,IAAKC,UAAU,OAEtE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAK1B,GAAY2B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,0BAIR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAIV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,SAC1E,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKvB,EAAOwB,MAAOC,SAAU,IAAKC,UAAU,OAEnE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAK1B,GAAY2B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,0BAjCE,c,yBCRpBQ,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACjBC,EAAgBJ,EAEjBE,IAASE,EAAa,UAAMJ,EAAN,sBAAuBE,IAH3B,kBAMoDG,IAAMC,IAAIF,GAN9D,2BAMTnC,KAASC,EANA,EAMAA,UAAWG,EANX,EAMWA,UAAWF,EANtB,EAMsBA,OAAQC,EAN9B,EAM8BA,WAN9B,kBAQV,CAAEF,YAAWG,YAAWF,SAAQC,eARtB,kCAWjBmC,QAAQC,IAAR,MAXiB,0DAAH,sDAeTC,EAAc,uCAAG,gCAAAN,EAAA,+EAEDE,IAAMC,IAAN,UAAaN,EAAb,WAFC,uBAEf/B,EAFe,EAEfA,KACDyC,EAAezC,EAAK0C,KAAI,SAAAC,GAAE,MAAK,CACjC1C,UAAW0C,EAAG1C,UAAU2C,MACxB1C,OAAQyC,EAAGzC,OAAO0C,MAClBC,WAAYF,EAAGE,eANG,kBAQfJ,GARe,yFAAH,qDAcdK,EAAc,uCAAG,4BAAAZ,EAAA,+EAECE,IAAMC,IAAN,UAAaN,EAAb,eAFD,cAEhBgB,EAFgB,yBAIdA,EAAS/C,KAAKgD,UAAUN,KAAI,SAAAT,GAAO,OAAKA,EAAQgB,SAJlC,gCAMvBX,QAAQC,IAAR,MANuB,yDAAH,qD,yBCgCZW,EA3DD,SAAC,GAA4D,IAAD,IAA1DC,YAAclD,EAA4C,EAA5CA,UAAWG,EAAiC,EAAjCA,UAAWF,EAAsB,EAAtBA,OAAS+B,EAAa,EAAbA,QAAa,EACpCmB,mBAAS,IAD2B,mBAC/DC,EAD+D,KACpDC,EADoD,KAGtEC,qBAAU,YACQ,uCAAG,sBAAArB,EAAA,kEACboB,EADa,SACMd,IADN,6EAAH,qDAIdgB,KACD,IACH,IAAMC,EAEFJ,EAAUK,OACV,kBAAC,IAAD,CACI1D,KAAM,CACF2D,OAAQN,EAAUX,KAAI,qBAAGG,cACzBe,SAAS,CAAC,CACN5D,KAAMqD,EAAUX,KAAI,qBAAGzC,aACvB4D,MAAO,WACPC,YAAa,UACbC,MAAM,GACR,CACE/D,KAAMqD,EAAUX,KAAI,qBAAGxC,UACvB2D,MAAO,SACPC,YAAa,oBACbE,gBAAiB,oBACjBD,MAAM,OAIZ,KAGJE,EACFhE,EACC,kBAAC,IAAD,CACGD,KAAM,CACF2D,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CAAC,CACPC,MAAO,SACPG,gBAAiB,CACb,qBACA,qBACA,sBAEJhE,KAAM,CAACC,EAAUyB,MAAOtB,EAAUsB,MAAOxB,EAAOwB,YAI1D,KAGN,OACI,yBAAKrB,UAAWC,IAAOC,WAClB0B,EAAUgC,EAAWR,I,mCC3BnBS,EA1BO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBAAyB,EAEJf,mBAAS,IAFL,mBAEtCgB,EAFsC,KAEpBC,EAFoB,KAI7Cd,qBAAU,YACQ,uCAAG,sBAAArB,EAAA,kEACbmC,EADa,SACMvB,IADN,6EAAH,qDAIdU,KACD,CAACa,IAEJ,IAAMC,EAAUF,EAAiB1B,KAAI,SAACT,EAASsC,GAAV,OACjC,4BAAQC,IAAKD,EAAO7C,MAAOO,GAAUA,MAGzC,OACI,kBAACwC,EAAA,EAAD,CAAapE,UAAWC,IAAOoE,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOX,EAAoBW,EAAEC,OAAOrD,SACxE,4BAAQA,MAAM,IAAd,UACC4C,K,kCCYFU,E,4MA5BXC,MAAQ,CACJ9B,YAAa,GACblB,QAAS,I,EASbkC,oB,uCAAsB,WAAOlC,GAAP,SAAAC,EAAA,yEACFD,EADE,SAC0BD,EAAUC,GADpC,yBACFA,QADE,KACOkB,YADP,WACb+B,SADa,2D,wPALQlD,I,OAApBmB,E,OAENgC,KAAKD,SAAS,CAAE/B,gB,qIAOV,IAAD,EAC0BgC,KAAKF,MAA9B9B,EADD,EACCA,YAAalB,EADd,EACcA,QACnB,OACI,yBAAK5B,UAAWC,IAAOC,WACnB,yBAAK6E,IAAKC,IAAaC,IAAI,GAAGC,MAAO,CAACC,MAAM,IAAKC,OAAQ,mBACzD,kBAAC,EAAD,CAAOzF,KAAMmD,IACb,kBAAC,EAAD,CAAegB,oBAAqBgB,KAAKhB,sBACzC,kBAAC,EAAD,CAAOhB,YAAaA,EAAalB,QAASA,S,GAxBxCyD,aCJlBC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,U,mBCJlDjG,EAAOC,QAAU,CAAC,UAAY,2B,wCCA9BD,EAAOC,QAAU,CAAC,UAAY,yB,mBCD9BD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.e049c010.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2d2Vv\",\"card\":\"Cards_card__3GmUf\",\"infected\":\"Cards_infected__3E_SJ\",\"recovered\":\"Cards_recovered__m0c9q\",\"deaths\":\"Cards_deaths__1B0ZS\"};","import React from 'react'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\r\nimport styles from './Cards.module.css'\r\n\r\n\r\nconst Cards = ({ data: {confirmed, deaths, lastUpdate, recovered} }) => {\r\n\r\n    if(!confirmed) return 'Loading...'\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recoveries</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of fatalies</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableURL = url\r\n\r\n    if(country) changeableURL = `${url}/countries/${country}`\r\n\r\n    try {\r\n        const { data : { confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableURL)\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n\r\n    } catch(err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`)\r\n        const modifiedData = data.map(dt => ({\r\n            confirmed: dt.confirmed.total,\r\n            deaths: dt.deaths.total,\r\n            reportDate: dt.reportDate,\r\n        }))\r\n        return modifiedData\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n   try {\r\n        const response = await axios.get(`${url}/countries`)\r\n        //console.log(response)\r\n        return (response.data.countries.map(country => (country.name)))\r\n   } catch(error) {\r\n       console.log(error)\r\n   }\r\n}","import React, { useState, useEffect} from 'react'\r\nimport { fetchDailyData } from '../../api/index'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({fetchedData: {confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n\r\n        fetchAPI()\r\n    }, [])\r\n    const lineChart = (\r\n        //check if length of data array is 0 or nah - truthy or falsy\r\n        dailyData.length ? (\r\n        <Line \r\n            data={{\r\n                labels: dailyData.map(({ reportDate }) => (reportDate)),\r\n                datasets:[{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true\r\n                },{\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'deaths',\r\n                    borderColor: 'rgba(255,0,0,0.6)',\r\n                    backgroundColor: 'rgba(255,0,0,0.4)',\r\n                    fill: true\r\n                }\r\n            ]\r\n            }}\r\n        />) : null\r\n    )\r\n\r\n    const barChart = (\r\n        confirmed ? \r\n        (<Bar \r\n            data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: [\r\n                        'rgba(0,0,255, 0.5)',\r\n                        'rgba(0,255,0, 0.5)',\r\n                        'rgba(255,0,0, 0.5)'\r\n                    ],\r\n                    data: [confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n        />)\r\n        : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart","import React, { useState, useEffect } from 'react'\r\n\r\nimport { fetchCountries } from '../../api'\r\n\r\nimport { NativeSelect, FormControl } from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setCountries(await fetchCountries())\r\n        }\r\n\r\n        fetchAPI()\r\n    }, [setCountries])\r\n\r\n    const options = fetchedCountries.map((country, index) => (\r\n        <option key={index} value={country}>{country}</option>\r\n    ))\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {options}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker","import React, { Component } from 'react'\r\n\r\nimport { Cards, Chart, CountryPicker } from './components'\r\nimport styles from './App.module.css'\r\n\r\nimport coronaImage from './images/covid.png'\r\n\r\nimport { fetchData } from './api'\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        fetchedData: {},\r\n        country: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData()\r\n\r\n        this.setState({ fetchedData})\r\n    }\r\n    \r\n    handleCountryChange = async (country) => {\r\n        this.setState({ country, fetchedData: await fetchData(country) })\r\n    }\r\n\r\n    render() {\r\n        let { fetchedData, country } = this.state\r\n        return (\r\n            <div className={styles.container}>\r\n                <img src={coronaImage} alt=\"\" style={{width:200, margin: '30px 0px 30px'}}/>\r\n                <Cards data={fetchedData} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart fetchedData={fetchedData} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App  />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1RS8s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__380Pg\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";"],"sourceRoot":""}